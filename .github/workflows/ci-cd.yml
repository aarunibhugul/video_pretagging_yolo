# .github/workflows/ci-cd.yml

name: Video Pre-Tagging MLOps Pipeline CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      video_name:
        description: 'Name of the sample video file (e.g., sample.mp4)'
        required: true
        default: 'sample_video.mp4'

jobs:
  build-and-run-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t video-pipeline .

      - name: Run Unit Tests Inside Docker
        run: |
          docker run --rm \
            --entrypoint "" \
            -v ${{ github.workspace }}/unit_tests:/app/src/test \
            -v ${{ github.workspace }}/unit_tests/unit_test_input:/app/unit_test_input \
            -v ${{ github.workspace }}/unit_tests/unit_test_output:/app/unit_test_output \
            video-pipeline \
            sh -c "pip install pytest && pytest /app/src/test/ -v"

      - name: Run pipeline Docker container
        run: |
          mkdir -p pipeline_output
          docker run \
            -v $(pwd)/input:/app/input \
            -v $(pwd)/pipeline_output:/app/output_data \
            video-pipeline \
            --video_path /app/input/${{ github.event.inputs.video_name || 'sample_video.mp4' }} \
            --output_dir /app/output_data

      - name: Upload output files
        uses: actions/upload-artifact@v4
        with:
          name: output-files
          path: pipeline_output/

      - name: Validate Pipeline Outputs
        id: validate_outputs
        run: |
          OUTPUT_BASE_DIR="my_pipeline_outputs" 
          OUTPUT_FRAMES_DIR="$OUTPUT_BASE_DIR/frames"
          COCO_FILE="$OUTPUT_BASE_DIR/detections.json"

          echo "Checking for output directory: $OUTPUT_FRAMES_DIR"
          if [ -d "$OUTPUT_FRAMES_DIR" ]; then
            echo "Output frames directory exists."
            NUM_FRAMES=$(ls -1 "$OUTPUT_FRAMES_DIR"/*.jpg 2>/dev/null | wc -l)
            echo "Number of frames found: $NUM_FRAMES"
            if [ "$NUM_FRAMES" -gt 0 ]; then
              echo "Frames were extracted successfully."
            else
              echo "No frames found in the output directory."
              exit 1
            fi
          else
            echo "Output frames directory '$OUTPUT_FRAMES_DIR' does not exist."
            exit 1
          fi

          echo "Checking for COCO JSON file: $COCO_FILE"
          if [ -f "$COCO_FILE" ]; then
            echo "COCO JSON file exists."
            if [ -s "$COCO_FILE" ]; then
              echo "COCO JSON file is not empty."
              echo "COCO JSON file generated successfully."
            else
              echo "COCO JSON file is empty."
              exit 1
            fi
          else
            echo "COCO JSON file '$COCO_FILE' does not exist."
            exit 1
          fi
